import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { NextPage } from "next";
import { useEffect, useReducer, useState } from "react";
import { Lyrics } from "../functions/getLyrics";

const inter = Inter({ subsets: ["latin"] });

const Home: NextPage<Lyrics> = ({ lyrics, title }) => {
  const [guess, setGuess] = useState("");
  const [guessed, addGuessed] = useReducer(
    (state: String[], word: string) => [...state, word],
    []
  );
  const [titleGuess, setTitleGuess] = useState("");

  useEffect(() => {
    console.log(guess);
    const formattedGuess = guess.toLowerCase().replaceAll(/[^A-Za-z 0-9]/g, "");
    const formattedLyrics = lyrics
      .toLowerCase()
      .replaceAll(/[^A-Za-z \n\-0-9]/g, "")
      .replaceAll(/[\n\-]/g, " ")
      .split(" ");
    console.log(formattedLyrics);
    if (!guessed.includes(guess) && formattedLyrics.includes(formattedGuess)) {
      addGuessed(formattedGuess);
      setGuess("");
    }
  }, [guess]);

  useEffect(() => {
    if (
      titleGuess.toLowerCase().replaceAll(/[^A-Za-z 0-9]/g, "") ===
      title.toLowerCase().replaceAll(/[^A-Za-z 0-9]/g, "")
    ) {
      lyrics
        .toLowerCase()
        .replaceAll(/[^A-Za-z \n\-0-9]/g, "")
        .replaceAll(/[\n\-]/g, " ")
        .split(" ")
        .forEach((l) => addGuessed(l));
    }
  }, [titleGuess]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <input
        value={titleGuess}
        onChange={(e) => setTitleGuess(e.target.value)}
      ></input>
      <br></br>
      <input value={guess} onChange={(e) => setGuess(e.target.value)}></input>
      <div>
        {lyrics.split("\n").map((l, k) => (
          <div key={k}>
            {l.split(/[ \-]/).map((w, wk) => (
              <>
                <span
                  style={{
                    color: guessed.includes(
                      w.toLowerCase().replaceAll(/\W/g, "")
                    )
                      ? "#070"
                      : "#700",
                    backgroundColor: guessed.includes(
                      w.toLowerCase().replaceAll(/\W/g, "")
                    )
                      ? "#00000000"
                      : "#700",
                  }}
                  key={`${k} ${wk}`}
                >
                  {w}
                </span>{" "}
              </>
            ))}
          </div>
        ))}
      </div>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>pages/index.tsx</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/next.svg"
            alt="Next.js Logo"
            width={180}
            height={37}
            priority
          />
          <div className={styles.thirteen}>
            <Image
              src="/thirteen.svg"
              alt="13"
              width={40}
              height={31}
              priority
            />
          </div>
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  );
};

Home.getInitialProps = async (context) => {
  const res = await fetch(
    `http://${context.req?.headers.host}/api/random?artist=Taylor Swift`
  );
  const lyrics: Lyrics = await res.json();
  return lyrics;
};

export default Home;
